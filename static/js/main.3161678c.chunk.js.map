{"version":3,"sources":["component/Main/Main.tsx","App.tsx","useGeoLocation.tsx","reportWebVitals.ts","index.tsx"],"names":["API_URL","latitude","longitude","distance","process","fetchData","a","axios","get","response","data","promises","initialPayload","group","results","map","venue","venueId","id","push","Promise","all","result","dataValue","item","name","photo","photos","groups","items","isOpen","hours","price","message","console","log","Main","useState","placeData","setPlaceData","loading","setLoading","sortOption","setSortOption","range","setRange","getData","then","useEffect","className","onChange","e","Number","target","value","style","marginLeft","length","sort","b","location","index","src","prefix","height","width","suffix","alt","App","geoLocator","position","setPosition","error","setError","coords","onError","geo","navigator","geolocation","watcher","watchPosition","clearWatch","useGeoLocator","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3161678c.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Main.css'\r\n\r\ninterface Venue {\r\n  id: string\r\n  venue:{\r\n    id: string\r\n    location: {\r\n      distance: string\r\n    }\r\n    name: string\r\n  }\r\n  location: {\r\n    distance: string\r\n  }\r\n    name: string\r\n    photo: {\r\n      suffix: string\r\n    prefix: string\r\n    height: number\r\n    width: number\r\n  }\r\n  isOpen: boolean\r\n  price: string\r\n}\r\n\r\ninterface VenueResponse {\r\n  venue: {\r\n    id: string\r\n    location: {\r\n      distance: string\r\n    }\r\n    name: string\r\n  }\r\n  name: string\r\n  photo: {\r\n    suffix: string\r\n    prefix: string\r\n    height: number\r\n    width: number\r\n  }\r\n  isOpen: boolean\r\n  price: string\r\n}\r\n\r\ninterface ResData {\r\n  response: {\r\n    group: {\r\n      results: Venue[]\r\n    }\r\n  }\r\n}\r\n\r\ninterface ApiResponse {\r\n  data:{\r\n    response: {\r\n      venue: {\r\n        id: string\r\n        location: {\r\n          distance: string\r\n        }\r\n        name: string\r\n        photos:{\r\n          groups:{\r\n            items: {\r\n              suffix: string\r\n              prefix: string\r\n              height: number\r\n              width: number\r\n            }[]\r\n          }[]\r\n        }\r\n        hours: {\r\n          isOpen: boolean\r\n        }\r\n        price:{\r\n          message: string\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst API_URL = (latitude: number, longitude: number, distance: number) => `https://api.foursquare.com/v2/search/recommendations?&client_id=${process.env.REACT_APP_CLIENT_ID}&client_secret=${process.env.REACT_APP_CLIENT_SECRET}&v=${process.env.REACT_APP_VERSION}&ll=${latitude},${longitude}&intent=coffee&radius=${distance}&limit=10&openNow=true`;\r\nconst API_URL_DETAILS = (venueId: string) => `https://api.foursquare.com/v2/venues/${venueId}?client_secret=${process.env.REACT_APP_CLIENT_SECRET}&v=${process.env.REACT_APP_VERSION}&client_id=${process.env.REACT_APP_CLIENT_ID}`;\r\n\r\nconst fetchData = async (latitude: number, longitude: number, distance: number): Promise<VenueResponse[]> => {\r\n  try {\r\n    const response = await axios.get(API_URL(latitude, longitude, distance),);\r\n    const data: ResData = await response.data;\r\n    const promises: Promise<ApiResponse>[] = []\r\n    let initialPayload: Record<string, VenueResponse> = {};\r\n    data.response.group.results.map((venue: Venue) => {\r\n      initialPayload[venue.venue.id]=venue\r\n      promises.push(axios.get(API_URL_DETAILS(venue.venue.id)))\r\n    })\r\n    const result = await Promise.all(promises)\r\n    const dataValue = result.map(item => {\r\n      return {\r\n        ...initialPayload[item.data.response.venue.id],\r\n        name: item.data.response.venue.name,\r\n        photo: item.data.response.venue.photos.groups[0]?.items[0],\r\n        isOpen: item.data.response.venue.hours?.isOpen || false,\r\n        price: item.data.response.venue.price.message\r\n      }\r\n    })\r\n    return dataValue;\r\n  } catch (error) {\r\n    console.log(error)\r\n    return []\r\n  }\r\n}\r\n\r\ninterface IProps {\r\n  latitude: number\r\n  longitude: number\r\n}\r\n\r\nconst Main: React.FC<IProps> = ({latitude, longitude}) => {\r\n  const [placeData, setPlaceData] = useState<VenueResponse[]>([]);\r\n  const [loading, setLoading] = useState(false)\r\n  const [sortOption, setSortOption] = useState('distance');\r\n  const [range, setRange] = useState(1000)\r\n  const PLACEHOLDER_IMAGE_URL = \"https://www.history.com/.image/t_share/MTU3ODc4NjA0MDUwNTQwMjU1/image-placeholder-title.jpg\";\r\n  \r\n  const getData = (distance = 1000) => {\r\n    setLoading(true);\r\n    fetchData(latitude, longitude, distance).then((data: VenueResponse[]) => {\r\n      setLoading(false)\r\n      setPlaceData(data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [])\r\n\r\n  const handleRangeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    getData(Number(e.target.value));\r\n    setRange(Number(e.target.value));\r\n  }\r\n \r\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSortOption(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div id=\"main\" className=\"container\">\r\n        <div className=\"header\">\r\n          <h1>Coffee Shop Finder</h1>\r\n          <div>\r\n            <select name=\"\" onChange={handleRangeChange} value={range}>\r\n              <option value=\"1000\">1000</option>\r\n              <option value=\"10000\">10000</option>\r\n              <option value=\"100000\">100000</option>\r\n            </select>\r\n            <select style={{marginLeft: '10px'}} onChange={handleChange} value={sortOption}>\r\n              <option value=\"distance\">Distance</option>\r\n              <option value=\"name\">Price</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {loading ?\r\n        <div>Loading... </div> : \r\n        <>\r\n          {placeData.length > 0 ? <div className=\"main\">\r\n            {placeData?.sort((a: VenueResponse, b: VenueResponse) => (sortOption === 'distance' ? \r\n              (a.venue.location.distance > b.venue.location.distance) : (a.price > b.price)) ? 1 : -1)\r\n              .map((item: VenueResponse, index: number) => <div key={`a${index}`} className=\"card-container\">\r\n              <div className=\"img-container\">\r\n                {item.photo ? <img className=\"w-100\" src={`${item.photo.prefix}${item.photo.height}${item.photo.width}${item.photo.suffix}`} alt=\"\" /> : \r\n                <img className=\"w-100\" src={PLACEHOLDER_IMAGE_URL} alt=\"\" />}\r\n              </div>\r\n              <div className=\"card-info\">\r\n                {item.venue.name && <h4>Name: <strong>{item.venue.name}</strong></h4>}\r\n                {item.venue.location.distance && <p>Distance: {item.venue.location.distance}m</p>}\r\n                {<p>Price: {item.price}</p>}\r\n              </div>\r\n            </div>)}\r\n        </div> : <div><p>No Coffee Shop Found</p></div>}</>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import Main from './component/Main/Main';\r\nimport { useGeoLocator } from './useGeoLocation';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  const geoLocator = useGeoLocator()\r\n\r\n  return <>\r\n      {geoLocator.error ? \r\n      <div className=\"error-alert\">\r\n        <p>{geoLocator.error}</p>\r\n      </div> : <Main longitude={geoLocator.longitude} latitude={geoLocator.latitude} /> }\r\n    </>\r\n}\r\n\r\nexport default App;\r\n","import {useState, useEffect} from 'react';\r\n\r\ninterface IState {\r\n  longitude: number\r\n  latitude: number\r\n}\r\ntype error = string\r\n\r\ninterface Coords{\r\n  coords: IState\r\n}\r\n\r\ninterface ErrorMsg {\r\n  message: string\r\n}\r\n\r\nexport const useGeoLocator = () => {\r\n  const [position, setPosition] = useState<IState>({latitude: 0, longitude: 0});\r\n  const [error, setError] = useState<error>('');\r\n  \r\n  const onChange = ({coords}: Coords) => {\r\n    setPosition({\r\n      latitude: coords.latitude,\r\n      longitude: coords.longitude,\r\n    });\r\n  };\r\n\r\n  const onError = (error: ErrorMsg) => {\r\n    setError(error.message);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const geo = navigator.geolocation;\r\n    if (!geo) {\r\n      setError('Geolocation is not supported');\r\n      return;\r\n    }\r\n    const watcher = geo.watchPosition(onChange, onError);\r\n    return () => geo.clearWatch(watcher);\r\n  }, []);\r\n  \r\n  return {...position, error};\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}